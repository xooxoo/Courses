position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line',
position = position_dodge(0.2))
ggplot(df4, aes(as.factor(dose), len, col = dose, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1,
position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point',
position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line',
position = position_dodge(0.2))
ggplot(df4, aes(as.factor(dose), len, col = len, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1,
position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point',
position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line',
position = position_dodge(0.2))
ggplot(df4, aes(as.factor(dose), len, col = supp, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1,
position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point',
position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line',
position = position_dodge(0.2))
url('https://stepic.org/media/attachments/lesson/11504/t-test.R')
open(url('https://stepic.org/media/attachments/lesson/11504/t-test.R'))
?open
file(open(url('https://stepic.org/media/attachments/lesson/11504/t-test.R')))
file(url('https://stepic.org/media/attachments/lesson/11504/t-test.R')))
file(url('https://stepic.org/media/attachments/lesson/11504/t-test.R'))
file(description = url('https://stepic.org/media/attachments/lesson/11504/t-test.R'))
file('2-3-ANOVA.R')
open(file('2-3-ANOVA.R'))
get_wd()
getwd()
open(file('DataAnalisys/2-3-ANOVA.R')
open(file('DataAnalisys/2-3-ANOVA.R'))
open(file('DataAnalisys/2-3-ANOVA.R'))
open(file('DataAnalisys/2-3-ANOVA.R'))
f <- open(file('DataAnalisys/2-3-ANOVA.R'))
?iris
df  <- iris
str(df)
df1  <- subset(df, Species != "setosa")
str(df1)
table(df1$Species)
hist(df1$Sepal.Length)
ggplot(df1, aes(x =Sepal.Length ))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(Species ~ .)
ggplot(df1, aes(x =Sepal.Length ))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(~Species)
ggplot(df1, aes(x =Sepal.Length ))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(Species ~)
ggplot(df1, aes(x =Sepal.Length ))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(Species~)
ggplot(df1, aes(x =Sepal.Length ))+
geom_histogram(fill = "white", col = "black", binwidth = 0.4)+
facet_grid(Species~.)
ggplot(df1, aes(Sepal.Length, fill = Species ))+
geom_density(alpha = 0.5)
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()
shapiro.test(df1$Sepal.Length)
shapiro.test(df1$Sepal.Length[df1$Species == "versicolor"])
shapiro.test(df1$Sepal.Length[df1$Species == "virginica"])
#The same result in one line
by(df1$Sepal.Length, INDICES = df1$Species, shapiro.test)
bartlett.test(Sepal.Length  ~ Species, df1)
#The same result in one line
by(df1$Sepal.Length, INDICES = df1$Species, shapiro.test)
t.test(Sepal.Length  ~ Species, df1)
test1  <- t.test(Sepal.Length  ~ Species, df1)
str(test1)
test1$p.value
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.data = mean_cl_normal, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.data = mean_cl_normal, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange",
size = 2)
ggplot(df1, aes(Species, Petal.Length))+
geom_boxplot()
my_calc <- function(x, y){
s <- x + y
return(s)
}
my_calc(3, 4)
my_calc <- function(x, y){
s <- x + y
d <- x - y
return(c(s, d))
}
my_calc(3, 4)
my_calc_2 <- function(x, y, z = 10){
s = x + y + z
d = x - y - z
}
my_calc_2(2,4)
my_calc_2 <- function(x, y, z = 10){
s = x + y + z
d = x - y - z
return(c(s, d))
}
my_calc_2(2,4)
my_calc_2(2, 4, 1)
my_calc_2(2, 4)
dist1 <- rnorm(100)
dist1[1:30] <- NA
dist1[is.na(dist1)]
dist1[is.na(dist1)] <- mean(dist1, na.rm = T)
return x
return(x)
my_na_rm <- function(x){
x[is.na(x) <- mean(x, na.rm = T)]
return(x)
}
dist1 <- rnorm(100)
dist1[1:30] <- NA
dist1 <- my_na_rm(x = dist1)
dist1 <- my_na_rm(x = dist1)
dist1 <- rnorm(100)
dist1[1:30] <- NA
dist1[is.na(dist1)] <- mean(dist1, na.rm = T)
dist1 <- rnorm(100)
dist1[1:30] <- NA
my_na_rm <- function(x){
x[is.na(x)] <- mean(x, na.rm = T)
return(x)
}
dist1 <- my_na_rm(x = dist1)
hist(dist1)
my_na_rm <- function(x){
if (is.numeric(x)){
x[is.na(x)] <- mean(x, na.rm = T)
return(x)
}
else {
print('X is not numeric')
}
}
shapiro.test(dist1)
(100)
dist1 <- rnorm(100)
shapiro.test(dist1)
my_na_rm <- function(x){
if (is.numeric(x)){
stat_test <- shapiro.test(x) #Тест шапиро - это тест на нормальность. Если p-val меньше 0.05, то распределение отклоняется от нормального
if (stat_test$p.value > 0.05){
x[is.na(x)] <- mean(x, na.rm = T)
}
else {
x[is.na(x)] <- median(x, na.rm = T)
}
return(x)
}
else {
print('X is not numeric')
}
}
dist1 <- rnorm(100)
dist1[1:30] <- NA
dist1 <- rnorm(1000)
dist1[1:30] <- NA
dist1 <- my_na_rm(x = dist1)
hist(dist1)
my_na_rm <- function(x){
if (is.numeric(x)){
stat_test <- shapiro.test(x) #Тест шапиро - это тест на нормальность. Если p-val меньше 0.05, то распределение отклоняется от нормального
if (stat_test$p.value > 0.05){
print('mean')
x[is.na(x)] <- mean(x, na.rm = T)
}
else {
print('median')
x[is.na(x)] <- median(x, na.rm = T)
}
return(x)
}
else {
print('X is not numeric')
}
}
dist1 <- rnorm(1000)
dist1[1:30] <- NA
dist1 <- my_na_rm(x = dist1)
dist1 <- rnorm(1000)
dist2 <- runif(1000)
dist1[1:30] <- NA
dist2[1:30] <- NA
hist(dist1)
hist(dist2)
?runif
hist(dist1)
my_na_rm <- function(x){
if (is.numeric(x)){
stat_test <- shapiro.test(x) #Тест шапиро - это тест на нормальность. Если p-val меньше 0.05, то распределение отклоняется от нормального
if (stat_test$p.value > 0.05){
print('mean')
x[is.na(x)] <- mean(x, na.rm = T)
}
else {
print('median')
x[is.na(x)] <- median(x, na.rm = T)
}
return(x)
}
else {
print('X is not numeric')
}
}
dist2 <- my_na_rm(x = dist2)
hist(dist1)
hist(dist2)
source('2-4-Functions.R')
getwd
getwd()
source('/DataAnalisys/2-4-Functions.R')
source('DataAnalisys/2-4-Functions.R')
df <- runite
df <- runif()
df <- runif(100)
hist(df)
?runif
plot(df)
line(df)
df2 <- rnorm(100)
plot(df2)
df[1:30] <- NA
NA.position <- function(x){
if (is.na(x)){
return(x[i])
}
}
NA.position(x)
NA.position(df)
NA.position(df)
NA.position <- function(x){
if (is.na(x)){
return(x)
}
}
NA.position(df)
NA.position <- function(x){
if (is.na(x)){
return(x[i])
}
}
NA.position(df)
NA.position <- function(x){
if (is.na(x)){
return(x)
}
}
which(x, is.na)
which(df, is.na)
which(df)
which(is.na, df)
which(is.na(df))
return(which(is.na(x)))
NA.position <- function(x){
return(which(is.na(x)))
}
NA.position(df)
NA.position <- function(x){
return(sum(x[is.na[x]]))
}
NA.position(df)
NA.position <- function(x){
return(sum(x[is.na(x)]))
}
NA.position(df)
x[is.na(x)])
x[is.na(x)]
df[is.na(df)]
sum(df[is.na(df)])
length(df[is.na(df)])
sum(is.na(df))
#Объединение многих файлов в один dataframe
getwd()
#Объединение многих файлов в один dataframe
dir()
#Объединение многих файлов в один dataframe
setwd('DataAnalisys/Grants Data')
#Объединение многих файлов в один dataframe
setwd('DataAnalisys/Grants data')
dir
dir()
dir(pattern = '*.cas')
dir(pattern = '*.csv')
grants <- data.frame()
for (i in dir(pattern = '*.csv')){
temp_df <- read.csv(i)
grants <- rbind(temp_df, grants)
}
View(temp_df)
View(grants)
View(grants)
read_data <- function(){
df <- data.frame()
for (i in dir(pattern = '*.csv')){
temp_df <- read.csv(i)
grants <- rbind(temp_df, grants)
}
print(paste(as.character(i), 'files were combined'))
return(df)
}
read_data()
read_data <- function(){
df <- data.frame()
for (i in dir(pattern = '*.csv')){
temp_df <- read.csv(i)
grants <- rbind(temp_df, grants)
}
print(paste(as.character(i), 'files were combined'))
return(df)
}
read_data()
grants <- read_data()
read_data <- function(){
df <- data.frame()
for (i in dir(pattern = '*.csv')){
temp_df <- read.csv(i)
df <- rbind(temp_df, df)
}
print(paste(as.character(i), 'files were combined'))
return(df)
}
grants <- read_data()
read_data <- function(){
df <- data.frame()
for (i in dir(pattern = '*.csv')){
temp_df <- read.csv(i)
df <- rbind(temp_df, df)
print(i)
}
print(paste(as.character(i), 'files were combined'))
return(df)
}
grants <- read_data()
list.files()
typeof(list.files())
list.files()
lst <- list.files()
dr <- dir()
dr[1]
lst[1]
read_data <- function(){
df <- data.frame()
for (i in dir(pattern = '*.csv')){
temp_df <- read.csv(i)
df <- rbind(temp_df, df)
print(i)
}
print(paste(length(dir), 'files were combined'))
return(df)
}
grants <- read_data()
read_data <- function(){
df <- data.frame()
for (i in dir(pattern = '*.csv')){
temp_df <- read.csv(i)
df <- rbind(temp_df, df)
print(i)
}
print(paste(length(dir()), 'files were combined'))
return(df)
}
grants <- read_data()
read_data <- function(){
df <- data.frame()
for (i in dir(pattern = '*.csv')){
temp_df <- read.csv(i)
df <<- rbind(temp_df, df)
}
print(paste(length(dir()), 'files were combined'))
return(df)
}
grants <- read_data()
read_data <- function(){
df <- data.frame()
for (i in dir(pattern = '*.csv')){
temp_df <<- read.csv(i)
df <- rbind(temp_df, df)
}
print(paste(length(dir()), 'files were combined'))
return(df)
}
grants <- read_data()
View(temp_df)
filtered.sum <- function(x){
return(sum(x[x > 0]))
}
filtered.sum(c(-3,0, NA, 1,2))
return(sum(x[x > 0], na.rm = T))
filtered.sum <- function(x){
return(sum(x[x > 0], na.rm = T))
}
filtered.sum(c(-3,0, NA, 1,2))
boxplot(df)
boxplot(df)
# Задание 4
df <- runif(1000)
boxplot(df)
# Задание 4
df <- runif(1000, 1, 100)
boxplot(df)
# Задание 4
dir('/home/stanislav/Документы/Работа/ExpeditionData/CATs/After')
df <- read.csv('/home/stanislav/Документы/Работа/ExpeditionData/CATs/After/AK3_RCM11_SN26_1449m.csv')
boxplot(df)
boxplot(df$temperature)
IQR(df$temperature, na.rm = T)
?probs
quantile(df$temperature, probs = c(0.25, 0.75))
subdf <- subset(df$temperature)
q <- quantile(df$temperature, probs = c(0.25, 0.75))
q
q$25
q[1]
typeof(q)
1*q
1*q[1]
2*q[1]
q
iqr <- IQR(df$temperature, na.rm = T)
subdf <- subset(df$temperature, df$temperature >= q[1] - iqr & df$temperature <= q[2] + iqr)
boxplot(subdf)
plot(subdf)
library(ggplot2)
ggplot(subdf, aes(subdf, col = 'red'))+
geom_boxplot()
ggplot(as.data.frame(subdf), aes(subdf, col = 'red'))+
geom_boxplot()
ggplot(as.data.frame(subdf), aes(as.data.frame(subdf), col = 'red'))+
geom_boxplot()
subdf <- as.data.frame(subset(df$temperature, df$temperature >= q[1] - iqr & df$temperature <= q[2] + iqr))
View(subdf)
names(subdf) <- 'Temp'
ggplot(subdf, aes(Temp, col = 'red'))+
geom_boxplot()
ggplot(subdf, aes(Temp, col = 'red'))+
geom_boxplot()
ggplot(subdf, aes(Temp, col = 'red'))+
geom_boxplot()
ggplot(subdf, aes(Temp))+
geom_boxplot()
ggplot(subdf, aes(subdf$Temp))+
geom_boxplot()
ggplot(subdf, aes(subdf$Temp, group = Temp))+
geom_boxplot()
str(subdf)
subdf <- subset(df, df$temperature >= q[1] - iqr & df$temperature <= q[2] + iqr)
View(subdf)
ggplot(subdf, aes(subdf$Temp))+
geom_boxplot()
ggplot(subdf, aes(temperature))+
geom_boxplot()
boxplot(subdf$temperature)
ggplot(subdf, aes(subdf$temperature, subdf$temperature))+
geom_boxplot()
ggplot(subdf, aes(subdf$Date, subdf$temperature))+
geom_boxplot()
ggplot(subdf, aes(subdf$reference, subdf$temperature))+
geom_boxplot()
ggplot(subdf, aes(subdf$reference, subdf$temperature))+
geom_boxplot()+
theme_bw()
ggplot(subdf, aes(subdf$reference, subdf$temperature))+
geom_boxplot()+
theme_classic()
ggplot(subdf, aes(subdf$reference, subdf$temperature))+
geom_boxplot()+
theme_get()
ggplot(subdf, aes(subdf$reference, subdf$temperature))+
geom_boxplot()+
theme_gray()
hist(df$temperature)
ggplot(subdf, aes(subdf$reference, subdf$temperature))+
geom_boxplot()+
geom_histogram()
ggplot(subdf, aes(subdf$temperature))+
geom_histogram()
boxplot(subdf$temperature, aes(bins = 0.2))
boxplot(subdf$temperature, bins = 0.2))
boxplot(subdf$temperature, bins = 0.2)
ggplot(subdf, aes(subdf$temperature))+
geom_histogram(bins = 0.2)
ggplot(subdf, aes(subdf$temperature))+
geom_histogram(bins = 1)
ggplot(subdf, aes(subdf$temperature))+
geom_histogram(bins = 50)
ggplot(subdf, aes(subdf$temperature))+
geom_histogram(bins = 50, col = 'white')
iqr <- IQR(df$temperature, na.rm = T)
q2 <- quantile(df$temperature, 0.25) + quantile(df$temperature, 0.75)
q2 <- quantile(df$temperature, 0.75) - quantile(df$temperature, 0.25)
df <- mtcars
df <- mtcars
cor.test(df$mpg, df$hp)
